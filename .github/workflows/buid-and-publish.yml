# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build Electron App and Publish it

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  create-release: 
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Checkout Git repo
        uses: actions/checkout@v2

      - name: Set Environment For App Version
        id: get-version
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: 'package.json'
          prop_path: 'version'

      - name: Make release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get-version.outputs.prop }}
          release_name: v${{ steps.get-version.outputs.prop }}
          draft: false
          prerelease: false

  build:
    needs: create-release
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout Git repo
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Install Angular CLI
        run: npm install -g @angular/cli

      - name: Install Project Dependencies
        run: npm install

      - name: Build and Package
        run: npm run app:dist

      - name: Upload Release Artifacts
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release }}
          asset_path: dist/HomoepathyCase*
        
