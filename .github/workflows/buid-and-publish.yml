# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build Flet App and Deploy it

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    create-release:
        runs-on: ubuntu-latest
        outputs:
            release: ${{ steps.create_release.outputs.upload_url }}
            version: ${{ steps.get-version.outputs.prop }}

        steps:
            - name: Checkout Git repo
              uses: actions/checkout@v2

            - name: Set Environment For App Version
              id: get-version
              run: echo "::set-output name=prop::$(date +'%Y%m%d.%H.%M.%S')"

            - name: Make release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: v${{ steps.get-version.outputs.prop }}
                  release_name: v${{ steps.get-version.outputs.prop }}
                  draft: false
                  prerelease: false

    build:
        needs: create-release
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [macos-latest, ubuntu-latest, windows-latest]

        steps:
            - name: Checkout Git repo
              uses: actions/checkout@v2

            - name: Set up Python 3.10
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"

            - name: Upgrade PIP
              run: python -m pip install --upgrade pip

            - name: Install Dependencies
              run: pip install -r requirements.txt

            - name: Flet Package
              run: flet pack app.py --name Homoeopathy-Case --icon logo.png

            - name: Zip Final Windows Package
              if: ${{ matrix.os == 'windows-latest' }}
              uses: thedoctor0/zip-release@0.7.1
              with:
                  type: "zip"
                  filename: "Homoeopathy-Case-Windows.zip"
                  directory: "dist"

            - name: Zip Final Linux Package
              if: ${{ matrix.os == 'ubuntu-latest' }}
              uses: thedoctor0/zip-release@0.7.1
              with:
                  type: "zip"
                  filename: "Homoeopathy-Case-Linux.zip"
                  directory: "dist"

            - name: Zip Final MacOs Package
              if: ${{ matrix.os == 'macos-latest' }}
              uses: thedoctor0/zip-release@0.7.1
              with:
                  type: "zip"
                  filename: "Homoeopathy-Case-MacOs.zip"
                  directory: "dist"

            - name: Upload Linux Artifact
              if: ${{ matrix.os == 'ubuntu-latest' }}
              uses: actions/upload-release-asset@v1.0.1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ needs.create-release.outputs.release }}
                  asset_path: dist/Homoeopathy-Case-Linux.zip
                  asset_name: Homoeopathy-Case-Linux.zip
                  asset_content_type: application/octet-stream

            - name: Upload Windows Artifact
              if: ${{ matrix.os == 'windows-latest' }}
              uses: actions/upload-release-asset@v1.0.1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ needs.create-release.outputs.release }}
                  asset_path: dist/Homoeopathy-Case-Windows.zip
                  asset_name: Homoeopathy-Case-Windows.zip
                  asset_content_type: application/octet-stream

            - name: Upload MacOs Artifact
              if: ${{ matrix.os == 'macos-latest' }}
              uses: actions/upload-release-asset@v1.0.1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ needs.create-release.outputs.release }}
                  asset_path: dist/Homoeopathy-Case-MacOs.zip
                  asset_name: Homoeopathy-Case-MacOs.zip
                  asset_content_type: application/octet-stream
